#!/usr/bin/env node

/**
  * Copyright © 2024 "ascen".
  * All rights reserved.

  * This file is part of the ascen project.
  * Unauthorized copying of this file, via any medium, is strictly prohibited.
  * Proprietary and confidential.
  */

const fs = require("fs");
const path = require("path");

const data = {
    companyName: '"ascen"',
    year: new Date().getFullYear(),
    prevYear: new Date().getFullYear() - 1,
    additionalInfo:
        "This file is part of the ascen project.\nUnauthorized copying of this file, via any medium, is strictly prohibited.\nProprietary and confidential.",
};

// const copyrightNotice = `\/*\nCopyright © ${data.year} ${data.companyName}.\nAll rights reserved.\n${data.additionalInfo}\n*\/\n\n`;
const copyrightNotice = `/**\n  * Copyright © ${data.year} ${data.companyName}.\n  * All rights reserved.\n\n${data.additionalInfo
    .trim()
    .split("\n")
    .map((line) => `  * ${line.trim()}`)
    .join("\n")}\n  */\n\n`;

const copyrightNoticePrevYear = `/**\n  * Copyright © ${data.prevYear} ${data.companyName}.\n  * All rights reserved.\n\n${data.additionalInfo
    .trim()
    .split("\n")
    .map((line) => `  * ${line.trim()}`)
    .join("\n")}\n  */\n\n`;

const validExtensions = [".tsx", ".ts", ".jsx", ".js"];
const ignoreFolders = ["node_modules", "dist", "build"];

function addCopyrightToFile(filePath) {
    let fileContent = fs.readFileSync(filePath, "utf8");
    if (fileContent.startsWith(copyrightNotice)) {
        console.log(
            `Copyright already present for the current year in: ${filePath}`,
        );
    } else {
        if (fileContent.startsWith(copyrightNoticePrevYear)) {
            fileContent = fileContent.replace(copyrightNoticePrevYear, "");
            console.log(`Removed previous year's copyright from: ${filePath}`);
        }
        const newContent = copyrightNotice + fileContent;
        fs.writeFileSync(filePath, newContent, "utf8");
        console.log(`Added current year's copyright to: ${filePath}`);
    }
}

function processDirectory(directory) {
    fs.readdirSync(directory).forEach((file) => {
        const fullPath = path.join(directory, file);
        if (fs.lstatSync(fullPath).isDirectory()) {
            if (!ignoreFolders.includes(file)) {
                processDirectory(fullPath);
            }
        } else if (validExtensions.some((ext) => fullPath.endsWith(ext))) {
            addCopyrightToFile(fullPath);
        }
    });
}

const rootDirectory = path.resolve(__dirname, "../apps");
console.log(`Processing directory: ${rootDirectory}`);
processDirectory(rootDirectory);
